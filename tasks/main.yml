---
# # # # #  Sudo  # # # # #

- name: "Require Correct Linux Distribution"
  assert:
    that: (ansible_distribution in ['CentOS', 'RedHat'] and ansible_distribution_version | version_compare('6.0.0', '>=')) or
          (ansible_distribution == 'Debian'             and ansible_distribution_version | version_compare('7.0.0', '>=')) or
          (ansible_distribution == 'Ubuntu'             and ansible_distribution_version | version_compare('14.0.0', '>='))
    msg:  "This Linux distribution '{{ ansible_distribution }} {{ ansible_distribution_version }}' is not supported by the role."
  tags: sudo

- name: "Include OS Variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "vars-{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "vars-{{ ansible_distribution }}.yml"
  tags: sudo

- name: "Install sudo"
  package: name="{{ item }}" state=present
  with_items:
   - "{{ sudo_packages }}"
  tags: sudo


- name: "Safety sudo Cron Task"
  cron:
    name:   sudo-safety-0
    minute: '*/15'
    state:  "{{ sudo_safety_state | default('present') }}"
    user:   root
    job:    "[ -f {{ sudo_safe_file }} ] && tar -xvpzf {{ sudo_safe_file }} -C /"
    cron_file: sudo_safety
  tags: sudo


- name: "Setup sudoers Directory"
  include: sudoers_d.yml
  tags: sudo

- name: "Sudo Configuration"
  template:
    src:    etc/sudoers.j2
    dest:   /etc/sudoers
    owner:  root
    group:  root
    mode:   '0440'
    force:  yes
    seuser: system_u
    serole: object_r
    setype: etc_t
  tags: sudo

- name: "Setup sudo-ldap"
  include: sudo-ldap.yml
  when: sudo_ldap_support | default(False) | bool
  tags: sudo


- name: "Fix SUDO DB permissions"
  file: path="{{ sudo_db_path }}" recurse=yes owner=root
  tags: sudo

- name: "Create sudo Safety Backup"
  shell: tar -cvpzf {{ sudo_safe_file }} --exclude={{ sudo_safe_file }} --one-file-system /etc/sudoers {{ sudo_sudoers_d_path }}
  when: sudo_safety_state | default('present') == 'present'
  tags: sudo

- name: "Remove sudo Safety Backup"
  file: path="{{ sudo_safe_file }}" state=absent
  when: sudo_safety_state | default('present') == 'absent'
  tags: sudo
